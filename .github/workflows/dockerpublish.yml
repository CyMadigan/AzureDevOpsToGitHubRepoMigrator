name: Docker CI/CD

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

env:
  IMAGE_NAME: n3wt0n/azdo2ghrepomigrator

jobs:
  # Build the image.
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build the Container Image
        run: docker build . --file ./Docker/Dockerfile --tag $IMAGE_NAME:$GITHUB_RUN_NUMBER

  # Push image to Docker Hub
  push:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      #- name: Build image
      #  run: docker build . --file Dockerfile --tag image

      #- name: Log into registry
      #  run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      #- name: Push image
      #  run: |
      #    IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
      #    
      #    # Change all uppercase to lowercase
      #    IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

      #    # Strip git ref prefix from version
      #    VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

      #    # Strip "v" prefix from tag name
      #    [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

      #    # Use Docker `latest` tag convention
      #    [ "$VERSION" == "master" ] && VERSION=latest

      #    echo IMAGE_ID=$IMAGE_ID
      #    echo VERSION=$VERSION

      #    docker tag image $IMAGE_ID:$VERSION
      #    docker push $IMAGE_ID:$VERSION
      
      - name: Tag the image with latest
        run: docker tag $IMAGE_NAME:$GITHUB_RUN_NUMBER $IMAGE_NAME:latest
        
      - name: Push image to Docker Hub (Run Number)
        run: docker push $IMAGE_NAME:$GITHUB_RUN_NUMBER	
        
      - name: Push image to Docker Hub (Latest)
        run: docker push $IMAGE_NAME:latest
